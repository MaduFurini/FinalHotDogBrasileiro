<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/global.css">
    <link rel="shortcut icon" href="/images/logo.png">
    <title>Hot Dog Brasileiro | Login</title>

</head>
<body>
    <link rel="stylesheet" href="/css/login/login.css">
    <link rel="stylesheet" href="/css/global.css">

    <div class="container libre-franklin ">
        <div class="content first-content ">
            <div class="first-column">
                <img src="/images/logo.png" alt="">
                <h2 class="title title-primary">Bem vindo de volta!</h2>
                <button id="signin" class="btn btn-primary" onclick="window.location.href='/entrar'">Entrar</button>

                <button type="button" class="btn btn-second btn-back" onclick="window.location.href='/home'">Voltar</button>
            </div>
            <div class="second-column">
                <h2 class="title title-second">Ainda não é cliente?</h2>
                <p class="description description-second">Cadastre-se e garanta o melhor hot dog na sua porta em poucos cliques!</p>

                <form class="form" action="/clientes/create" method="post">
                    <label class="label-input" for="">
                        <i class="far fa-user icon-modify"></i>
                        <input name="nome" type="text" placeholder="Nome" required>
                    </label>

                    <label class="label-input" for="">
                        <i class="far fa-user icon-modify"></i>
                        <input name="cpf" type="text" placeholder="CPF" required oninput="mascaraCpf(this)">
                    </label>

                    <label name="email" class="label-input" for="">
                        <i class="far fa-envelope icon-modify"></i>
                        <input name="email" type="email" placeholder="Email" required>
                    </label>

                    <label name="senha" class="label-input" for="">
                        <i class="fas fa-lock icon-modify"></i>
                        <input name="senha" type="password" placeholder="Senha" required>
                    </label>

                    <button class="btn btn-second">Pronto</button>
                </form>
            </div><!-- second column -->
        </div><!-- first content -->
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function mascaraCpf(cpfInput) {
            let valor = cpfInput.value.replace(/\D/g, '');

            if (valor.length > 11) valor = valor.slice(0, 11);

            cpfInput.value = valor
                .replace(/(\d{3})(\d)/, '$1.$2')
                .replace(/(\d{3})(\d)/, '$1.$2')
                .replace(/(\d{3})(\d{1,2})$/, '$1-$2');

            if (valor.length === 11) {
                if (!validarCPF(valor)) {
                    Swal.fire({
                        title: 'Erro!',
                        text: 'CPF não é válido, por favor digite um correto.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    cpfInput.value = '';
                }
            }
        }

        function validarCPF(cpf) {
            cpf = cpf.replace(/\D/g, '');

            if (cpf.length !== 11 || /^(\d)\1+$/.test(cpf)) {
                return false;
            }

            let soma = 0;
            let resto;

            for (let i = 1; i <= 9; i++) {
                soma += parseInt(cpf.charAt(i - 1)) * (11 - i);
            }
            resto = (soma * 10) % 11;
            if (resto === 10 || resto === 11) {
                resto = 0;
            }
            if (resto !== parseInt(cpf.charAt(9))) {
                return false;
            }

            soma = 0;

            for (let i = 1; i <= 10; i++) {
                soma += parseInt(cpf.charAt(i - 1)) * (12 - i);
            }
            resto = (soma * 10) % 11;
            if (resto === 10 || resto === 11) {
                resto = 0;
            }
            if (resto !== parseInt(cpf.charAt(10))) {
                return false;
            }

            return true;
        }

        function removeQueryParam(param) {
            const url = new URL(window.location.href);
            url.searchParams.delete(param);
            window.history.replaceState({}, document.title, url);
        }

        const params = new URLSearchParams(window.location.search);
        const message = params.get('message');
        const error = params.get('error');

        if (message) {
            Swal.fire({
                icon: 'error',
                title: 'Erro',
                text: message,
            }).then(() => {
                removeQueryParam('error');
            });
        }

        if (error) {
            Swal.fire({
                icon: 'error',
                title: 'Erro',
                text: error,
                confirmButtonText: 'Ok',
                customClass: {
                    title: 'font-family',
                    text: 'font-family',
                    confirmButton: 'btn-second'
                }
            }).then(() => {
                removeQueryParam('error');
            });
        }
    </script>
</body>
</html>